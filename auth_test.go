package auth

import (
	"github.com/iden3/go-schema-processor/verifiable"
	"github.com/iden3/iden3comm/protocol"
	"testing"

	"github.com/iden3/go-circuits"
)

func TestCreateAuthorizationRequest(t *testing.T) {

	t.Skip("not implemented")

	aud := "1125GJqgw6YEsKFwj63GY87MMxPL9kwDKxPUiwMLNZ"

	_ = CreateAuthorizationRequest("10", aud, "https://test.com/callback")

}

func TestVerifyMessageWithAuthProof(t *testing.T) {

	t.Skip("not implemented")
	var message protocol.AuthorizationResponseMessage
	message.Type = protocol.AuthorizationResponseMessageType
	message.Body = protocol.AuthorizationMessageResponseBody{}

}

func TestVerifyMessageWithAuthAndAtomicProofMTP(t *testing.T) {

	t.Skip("not implemented")

	var message protocol.AuthorizationResponseMessage
	message.Type = protocol.AuthorizationResponseMessageType
	message.Body = protocol.AuthorizationMessageResponseBody{}

	zkpAuth := protocol.ZeroKnowledgeProofResponse{
		CircuitID: string(circuits.AuthCircuitID),
	}

	zkpAuth.Proof = &verifiable.ProofData{
		A: []string{
			"2370534291294441687575434871070063634049522739054135650290327914016792634144",
			"18704664440065881255248484392571034267692380947539795837185393466696768539729",
			"1",
		},
		B: [][]string{
			{
				"1593753415597360514506439944675236073038159742598884104707775208490282580641",
				"15142074894866083200293799148931702287457526593114838706672766340147139402722",
			},
			{
				"19117825221840408597122339519717065920080389822558089367138595722092823743944",
				"2706264472260224656022451103720565978368804964791420659255319627595448027435",
			},
			{
				"1",
				"0",
			}},
		C: []string{
			"156766304977057264803138092945401446963129379605822159500567538377014916135",
			"10031227231200820171929683445407743402234929438478965985477678284516420821593",
			"1",
		},
	}
	zkpAuth.PubSignals = []string{
		"1",
		"5816868615164565912277677884704888703982258184820398645933682814085602171910",
		"286312392162647260160287083374160163061246635086990474403590223113720496128",
	}
	zkpAtomic := protocol.ZeroKnowledgeProofResponse{
		CircuitID: string(circuits.AtomicQueryMTPCircuitID),
	}

	zkpAtomic.Proof = &verifiable.ProofData{
		A: []string{
			"6030766736698709207503235935723632085586029528521094738928233216811480909046",
			"4437136509574400225154484002038044352118866895728605877220163266688442697592",
			"1",
		},
		B: [][]string{
			{
				"15453350172140966014073430212249205778693880717093820193563857180042745981851",
				"14488444741965254532105148685589475266981176437305146636275604446328498705645",
			},
			{
				"13806971963548792566531398385681144495082522845543761509446816014383821923698",
				"19957785137858923832827931038978551647136133568993960686008633889509690940365",
			},
			{
				"1",
				"0",
			}},
		C: []string{
			"21292219848582385743964407300399360838478079150292968775627171001173922067285",
			"75068403233603473513513911957593156375764622075671912015406661182104632457",
			"1",
		},
	}
	zkpAtomic.PubSignals = []string{
		"286312392162647260160287083374160163061246635086990474403590223113720496128",
		"5816868615164565912277677884704888703982258184820398645933682814085602171910",
		"1",
		"274380136414749538182079640726762994055",
		"20606705619830543359176597576564222044873771515109680973150322899613614552596",
		"296941560404583387587196218166209608454370683337298127000644446413747191808",
		"2",
		"10",
		"0",
		"0",
		"0",
		"0",
		"0",
		"0",
		"0",
		"0",
		"0",
		"0",
		"0",
		"0",
		"0",
		"0",
		"0",
		"0",
		"1642074362",
	}
	message.Body.Scope = []protocol.ZeroKnowledgeProofResponse{zkpAuth, zkpAtomic}

}
func TestVerifyMessageWithAuthAndAtomicProofSig(t *testing.T) {

	t.Skip("not implemented")

	var message protocol.AuthorizationResponseMessage
	message.Type = protocol.AuthorizationResponseMessageType
	message.Body = protocol.AuthorizationMessageResponseBody{}

	zkpAtomic := protocol.ZeroKnowledgeProofResponse{
		CircuitID: string(circuits.AtomicQuerySigCircuitID),
	}

	zkpAtomic.Proof = &verifiable.ProofData{
		A: []string{
			"21178773137304249408018096919215793146186660193600590200162998171616690680862",
			"16723112137222954968898173855229909328853328041073537712042644179394618395718",
			"1",
		},
		B: [][]string{
			{
				"8154027924267780522239744810441934681489939329198303707054340169107503503140",
				"13896707211429361892074216485456946320669555884653797826533153207946250359049",
			},
			{
				"8812219892284825088614656710055314118836154185354535911423155023728785526230",
				"1137286278173265884575737920332918824261782651899335984176084421710066567443",
			},
			{
				"1",
				"0",
			}},
		C: []string{
			"21449679392663656551219603482072298649562605845908654459293574785782180912646",
			"3048812808090764561109652462842759548958106605480847082632940766239677991498",
			"1",
		},
	}
	zkpAtomic.PubSignals = []string{
		"286312392162647260160287083374160163061246635086990474403590223113720496128",
		"5816868615164565912277677884704888703982258184820398645933682814085602171910",
		"1",
		"274380136414749538182079640726762994055",
		"296941560404583387587196218166209608454370683337298127000644446413747191808",
		"13850938450891658391727543833954835315278162931905851620922327407976321180678",
		"2",
		"10",
		"0",
		"0",
		"0",
		"0",
		"0",
		"0",
		"0",
		"0",
		"0",
		"0",
		"0",
		"0",
		"0",
		"0",
		"0",
		"0",
		"1642074362",
	}
}
