package verification

import (
	"github.com/iden3/go-circom-prover-verifier/parsers"
	"github.com/iden3/go-circom-prover-verifier/verifier"
	"github.com/iden3/go-circuits"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
)

func TestVerify(t *testing.T) {
	// verifyGroth16 the proofs
	vkJSON := []byte(circuits.KycBySignaturesVerificationKey)

	publicJSON := []byte(`["12345","372902514040400364441393275265861152892555341750332828757240276565437644800","19443506635601976434000063402326775248489014592264899338419890539515181882284","840","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","372902514040400364441393275265861152892555341750332828757240276565437644800","19443506635601976434000063402326775248489014592264899338419890539515181882284","2021","4","25"]`)

	p := `{"pi_a":["10441536817202584897377823144827964642356918402871315490038163167310235469676","3188873104904010906845899057040012497857652125001996465924027367142766788060","1"],"pi_b":[["10259767950868305572343651918722890484304440255374794205464892311274784569874","18113532891970083775734522192028652126404157383671158241782353379080674688210"],["20011188305329655231409527762393912898857036946232895893305954758470171745705","19212224402431449690017436050830610655559646158634403540885275057516508525272"],["1","0"]],"pi_c":["17410066358263445906462947561105622363737416663317734129930901016400750644236","10889346016675221860511647187111664354773325795907973404602900127856769668544","1"],"protocol":"groth16"}`
	proof, err := parsers.ParseProof([]byte(p))
	require.Nil(t, err)

	public, err := parsers.ParsePublicSignals(publicJSON)

	require.Nil(t, err)
	vk, err := parsers.ParseVk(vkJSON)
	require.Nil(t, err)

	res := verifier.Verify(vk, proof, public)
	assert.True(t, res)
}
